{"frames":[{"func":"all.days %>% transmute(station = station, week_date = as_date(paste0(\"0000-\", \n    month(all_days), \"-\", day(all_days)))) %>% distinct() %>% \n    anti_join(rec.days %>% mutate(week_date = as_date(paste0(\"0000-\", \n        month(rec_days), \"-\", day(rec_days)))) %>% select(station,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"distinct(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"unnest(., cols = c(consecutive_intervals))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"summarize(., consecutive_intervals = list(detect_consecutive_intervals(week_date)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"group_by(., station)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter(., station, station %in% species.data$station)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter.data.frame(., station, station %in% species.data$station)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter_rows(.data, dots, by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter_eval(dots, mask = mask, error_call = error_call, user_env = user_env)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(mask$eval_all_filter(dots, env_filter), error = dplyr_error_handler(dots = dots, \n    mask = mask, bullets = filter_bullets, error_call = error_call), \n    warning = function(cnd) {\n        local_error_context(dots, i, mask) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mask$eval_all_filter(dots, env_filter)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dplyr_internal_error(\"dplyr:::filter_incompatible_type\", list(\n    index = 1L, column_name = NULL, result = c(\"ROBV\", \"ROBV\", \n    \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\", \n    \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\", \"FCD\",  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(class = c(class, \"dplyr:::internal_error\"), dplyr_error_data = data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    local_error_context(dots, i = frame[[i_sym]], mask = mask)\n    if (inherits(cnd, \"dplyr:::internal_error\")) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = error_class, parent = parent, call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in filter(., station, station %in% species.data$station) : \n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be a logical vector, not a character vector.\u001B[39m\n"}